name: Notify Slack for Team-Owned PRs

on:
  pull_request:
    types: [opened]

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR author is in team
        id: check_team_member
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG: ckiser-test-organization
          TEAM_SLUG: pr-notify-team
          USERNAME: ${{ github.event.pull_request.user.login }}
        run: |
          echo "Checking if $USERNAME is a member of $ORG/$TEAM_SLUG..."
          RESPONSE=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/orgs/$ORG/teams/$TEAM_SLUG/memberships/$USERNAME")

          STATE=$(echo "$RESPONSE" | jq -r '.state // "none"')
          if [ "$STATE" != "active" ]; then
            echo "‚ùå $USERNAME is not a member of $TEAM_SLUG ‚Äî stopping workflow."
            exit 0
          fi
          echo "‚úÖ $USERNAME is a member of $TEAM_SLUG."

      - name: Check if repo is owned by team
        id: check_repo
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG: ckiser-test-organization
          TEAM_SLUG: pr-notify-team
          REPO: ${{ github.repository }}
        run: |
          echo "Checking if $REPO is managed by $ORG/$TEAM_SLUG..."
          RESPONSE=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/orgs/$ORG/teams/$TEAM_SLUG/repos/$REPO")

          PERMISSION=$(echo "$RESPONSE" | jq -r '.permissions.push // "none"')

          if [ "$PERMISSION" != "true" ]; then
            echo "‚ùå $REPO is not owned by $TEAM_SLUG ‚Äî stopping workflow."
            exit 0
          fi
          echo "‚úÖ $REPO is owned by $TEAM_SLUG."

      - name: Send message to Slack
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"

          MESSAGE="üì¢ New PR in *${{ github.repository }}* by *${PR_AUTHOR}*:\n<${PR_URL}|${PR_TITLE}>"

          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"${MESSAGE}\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
